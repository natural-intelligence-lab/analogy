<?xml version="1.0"?>
<monkeyml version="1.0">
    <io_devices tag="IO Devices">
        <iodevice type="stimulus_display" tag="Stimulus Display" background_color="0.3, 0.3, 0.3" announce_stimuli_on_implicit_updates="YES"></iodevice>
        <iodevice tag="Eyelink 1000" type="eyelink" data_interval="1ms" tracker_ip="100.1.1.1" eye_rx="" eye_ry="" eye_lx="" eye_ly="" eye_x="" eye_y="" eye_z="" href_rx="" href_ry="" href_lx="" href_ly="" pupil_rx="" pupil_ry="" pupil_lx="eyeRX" pupil_ly="eyeRY" pupil_size_r="" pupil_size_l="pupil_size" eye_time="" tracking_dist="1024"></iodevice>
        <calibrator type="linear_eye_calibrator" tag="Eye Cal" eyeh_raw="eyeRX" eyev_raw="eyeRY" eyeh_calibrated="eye_x" eyev_calibrated="eye_y"></calibrator>
        <iodevice type="usbhid_generic" tag="USB HID Device" usage_page="1" usage="6" preferred_location_id="" log_all_input_values="NO">
            <iochannel type="usbhid_generic_input_channel" tag="USB HID Input Channel - spacebar" usage_page="7" usage="44" value="buttonPressed"></iochannel>
            <iochannel type="usbhid_generic_input_channel" tag="USB HID Input Channel 2" usage_page="7" usage="80" value="leftArrowDown"></iochannel>
            <iochannel type="usbhid_generic_input_channel" tag="USB HID Input Channel 3" usage_page="7" usage="79" value="rightArrowDown"></iochannel>
            <iochannel type="usbhid_generic_input_channel" tag="USB HID Input Channel 4" usage_page="7" usage="17" value="nN"></iochannel>
            <iochannel type="usbhid_generic_input_channel" tag="USB HID Input Channel 5" usage_page="7" usage="16" value="mM"></iochannel>
        </iodevice>
        <iodevice type="mouse_input" tag="Mouse Input Device" mouse_position_x="mouseX" mouse_position_y="mouseY" mouse_down="click" hide_cursor="NO"></iodevice>
    </io_devices>
    <variables tag="Variables">
        <folder tag="Eye">
            <variable tag="eyeRX" groups="Eye" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="eyeRY" groups="Eye" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="eye_x" groups="Eye" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="eye_y" groups="Eye" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="pupil_size" groups="Eye" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
        </folder>
        <folder tag="IO">
            <variable tag="ao0" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="doWord" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="doStrobe" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="buttonPressed" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="leftArrowDown" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="rightArrowDown" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="nN" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="mM" groups="I/O" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
        </folder>
        <folder tag="Reward 2">
            <variable tag="rewardOut" groups="Reward" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="rewardDur" groups="Reward" scope="global" logging="when_changed" default_value="200" type="any" persistant="0"></variable>
        </folder>
        <folder tag="Fixation">
            <variable tag="fix_win" groups="Fixation" scope="global" logging="when_changed" default_value="3" type="any" persistant="1"></variable>
            <variable tag="fix_sz" groups="Fixation" scope="global" logging="when_changed" default_value="0.5" type="any" persistant="0"></variable>
            <variable tag="NoFixWaitDur" groups="Fixation" scope="global" logging="when_changed" default_value="5000" type="any" persistant="1"></variable>
            <variable tag="fixWaitDur" groups="Fixation" scope="global" logging="when_changed" default_value="10000" type="any" persistant="1"></variable>
            <variable tag="fixY" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fixX" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fixOn" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fix_red" groups="Fixation" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="fix_green" groups="Fixation" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="fix_blue" groups="Fixation" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
        </folder>
        <folder tag="Target">
            <variable tag="targetOn" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="theta" groups="Target" scope="global" logging="when_changed" default_value="180" type="any" persistant="0"></variable>
            <variable tag="thetaFeedback" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="theta2" groups="Target" scope="global" logging="when_changed" default_value="180" type="any" persistant="0"></variable>
            <variable tag="theta_min" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="theta_max" groups="Target" scope="global" logging="when_changed" default_value="180" type="any" persistant="0"></variable>
            <variable tag="theta_N" groups="Target" scope="global" logging="when_changed" default_value="2" type="any" persistant="0"></variable>
            <variable tag="amp" groups="Trial" scope="global" logging="when_changed" default_value="7.5" type="any" persistant="0"></variable>
            <variable tag="on_targ" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="targ_red" groups="Target" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="targ_green" groups="Target" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="targ_blue" groups="Target" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="targ_sz" groups="Target" scope="global" logging="when_changed" default_value="0.7" type="any" persistant="0"></variable>
            <variable tag="target_x" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="target_x2" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="target_y" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="target_y2" groups="Target" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="target_alpha" groups="Target" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
            <variable tag="targetTimeDur" groups="Target" scope="global" logging="when_changed" default_value="1000" type="any" persistant="0"></variable>
        </folder>
        <folder tag="Maze">
            <variable tag="localTrials" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="idFreeView" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="trialNumBlock" groups="Trial" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="trialNum" groups="Trial" scope="global" logging="when_changed" default_value="960" type="any" persistant="0"></variable>
            <variable tag="nTurn" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="nTurnTrial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="yTurn0" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="xTurn0" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="yTurn1" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="xTurn1" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="yTurn0Trial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="xTurn0Trial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="yTurn1Trial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="xTurn1Trial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="dist" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="distTrial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="speed" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="speedTrial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="ts" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="tsTrial" groups="Maze" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="xTurn" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="yTurn" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="xSize" groups="Maze" scope="global" logging="when_changed" default_value="12" type="any" persistant="1"></variable>
            <variable tag="xSizePix" groups="Maze" scope="global" logging="when_changed" default_value="1000" type="any" persistant="1"></variable>
            <variable tag="ySize" groups="Maze" scope="global" logging="when_changed" default_value="12" type="any" persistant="1"></variable>
            <variable tag="ySizePix" groups="Maze" scope="global" logging="when_changed" default_value="1000" type="any" persistant="1"></variable>
            <variable tag="imW" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="any" persistant="1"></variable>
            <variable tag="imH" groups="Maze" scope="global" logging="when_changed" default_value="[]" type="any" persistant="1"></variable>
            <variable tag="deg2pix" groups="Maze" scope="global" logging="when_changed" default_value="70" type="any" persistant="1"></variable>
            <variable tag="mazeTimeDur" groups="Maze" scope="global" logging="when_changed" default_value="1000" type="any" persistant="1"></variable>
            <variable tag="ballDur" groups="Maze" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="ballFrames" groups="Maze" scope="global" logging="when_changed" default_value="15" type="any" persistant="1"></variable>
            <variable tag="stimEnding" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ball_sz" groups="MovingBall" scope="global" logging="when_changed" default_value="0.3" type="any" persistant="1"></variable>
            <variable tag="nTimeTs" groups="MovingBall" scope="global" logging="when_changed" default_value="6" type="any" persistant="1"></variable>
            <variable tag="tp" groups="MovingBall" scope="global" logging="when_changed" default_value="[]" type="list" persistant="1"></variable>
            <variable tag="iT" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="pCatch" groups="MovingBall" scope="global" logging="when_changed" default_value="0.05" type="any" persistant="1"></variable>
            <variable tag="idCatch" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="mouseX" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="xCatch" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="mouseY" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="yCatch" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="tCatch" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="click" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
        </folder>
        <folder tag="Global">
            <variable tag="override" groups="Target" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"></variable>
            <variable tag="theta_override" groups="Target" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"></variable>
            <variable tag="pstop" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="startTrial" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="endTrial" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="trialNumBlockShort" groups="Trial" scope="global" logging="when_changed" default_value="10" type="any" persistant="0"></variable>
            <variable tag="minTrialNumBlock" groups="Trial" scope="global" logging="when_changed" default_value="175" type="any" persistant="0"></variable>
            <variable tag="minTrialNumBlock2" groups="Trial" scope="global" logging="when_changed" default_value="850" type="any" persistant="0"></variable>
            <variable tag="meanTrialNumBlock" groups="Trial" scope="global" logging="when_changed" default_value="5" type="any" persistant="0"></variable>
            <variable tag="maxTrialNumBlock" groups="Trial" scope="global" logging="when_changed" default_value="20" type="any" persistant="0"></variable>
            <variable tag="trialNumBlockLong" groups="Trial" scope="global" logging="when_changed" default_value="10" type="any" persistant="0"></variable>
            <variable tag="trialNumPrior" groups="Trial" scope="global" logging="when_changed" default_value="25" type="any" persistant="0"></variable>
            <variable tag="consecutiveCorrect" groups="Reward" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="nReversal" groups="Reward" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="maxReversal" groups="Reward" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="bonusRewDur" groups="Reward" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="dbonus" groups="Reward" scope="global" logging="when_changed" default_value="10" type="any" persistant="0"></variable>
            <variable tag="timeRemaining" groups="Trial" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="trialDuration" groups="Trial" scope="global" logging="when_changed" default_value="2000" type="any" persistant="0"></variable>
            <variable tag="saccadeTimeDur" groups="Trial" scope="global" logging="when_changed" default_value="300" type="any" persistant="0"></variable>
            <variable tag="memoryTimeDur" groups="Memory" scope="global" logging="when_changed" default_value="1000" type="any" persistant="0"></variable>
            <variable tag="GraceTimeDur" groups="Trial" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="fix_time_dur" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fix_dur_min" groups="Fixation" scope="global" logging="when_changed" default_value="250" type="any" persistant="1"></variable>
            <variable tag="fix_dur_mean" groups="Fixation" scope="global" logging="when_changed" default_value="250" type="any" persistant="1"></variable>
            <variable tag="tFixOn" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="III_dur" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="0"></variable>
            <variable tag="III2_dur" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="0"></variable>
            <variable tag="III3_dur" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="0"></variable>
            <variable tag="III4_dur" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="0"></variable>
            <variable tag="III5_dur" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="0"></variable>
            <variable tag="III2_dur_min" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="0"></variable>
            <variable tag="III2_dur_mean" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="III_dur_min" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="III_dur_mean" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="III_dur_max" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="target_dur_min" groups="Target" scope="global" logging="when_changed" default_value="250" type="any" persistant="1"></variable>
            <variable tag="target_dur_mean" groups="Target" scope="global" logging="when_changed" default_value="250" type="any" persistant="1"></variable>
            <variable tag="memory_dur_min" groups="Memory" scope="global" logging="when_changed" default_value="2000" type="any" persistant="1"></variable>
            <variable tag="memory_dur_mean" groups="Memory" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="iti" groups="Trial" scope="global" logging="when_changed" default_value="200" type="any" persistant="1"></variable>
            <variable tag="minBreakDur" groups="Trial" scope="global" logging="when_changed" default_value="5000" type="any" persistant="1"></variable>
            <variable tag="timeout" groups="Trial" scope="global" logging="when_changed" default_value="300" type="any" persistant="1"></variable>
        </folder>
        <folder tag="Fixation+Pursuit">
            <variable tag="pursuitTheta" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="on_fix_dyn" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fixHz" groups="Fixation" scope="global" logging="when_changed" default_value="0.25" type="any" persistant="0"></variable>
            <variable tag="fixDynMag" groups="Fixation" scope="global" logging="when_changed" default_value="8" type="any" persistant="0"></variable>
            <variable tag="tStart" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fix_pur_trials" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fix_pur_correct" groups="Fixation" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fix_pur_HoldDur" groups="Fixation" scope="global" logging="when_changed" default_value="2500" type="any" persistant="1"></variable>
            <variable tag="tEarlyTMS" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="tLateTMS" groups="Fixation" scope="global" logging="when_changed" default_value="1000" type="any" persistant="1"></variable>
            <variable tag="fix_pur_ITI_Dur" groups="Fixation" scope="global" logging="when_changed" default_value="250" type="any" persistant="1"></variable>
            <variable tag="fix_pur_timeoutDur" groups="Fixation" scope="global" logging="when_changed" default_value="1500" type="any" persistant="1"></variable>
        </folder>
        <folder tag="Fixation+Distractor">
            <variable tag="fix_dis_trials" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="fix_dis_correct" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="distractorOnset_min" groups="Distractor" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
            <variable tag="distractorOnset_mu" groups="Distractor" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
            <variable tag="distractorOnset_time" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="distractorTime_min" groups="Distractor" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
            <variable tag="distractorTime_mu" groups="Distractor" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
            <variable tag="distractorTime" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="distractorSize" groups="Distractor" scope="global" logging="when_changed" default_value="0.5" type="any" persistant="0"></variable>
            <variable tag="distractor_alpha" groups="Distractor" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="distractor_x" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="distractor_y" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="distractorOn" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="DistractorSimultaneous" groups="Distractor" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="0"></variable>
            <variable tag="fix_dis_ITI_Dur" groups="Distractor" scope="global" logging="when_changed" default_value="750" type="any" persistant="1"></variable>
        </folder>
        <folder tag="OverlapSaccade">
            <variable tag="OverlapSaccade_correct" groups="Overlap" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="OverlapSaccade_trials" groups="Overlap" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
        </folder>
        <folder tag="MemorySaccade">
            <variable tag="MemorySaccade_correct" groups="Memory" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="MemorySaccade_trials" groups="Memory" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
        </folder>
        <folder tag="MovingBall">
            <variable tag="iTrial" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="MovingBall_correct" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="productionInterval" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="productionInterval2" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="productionInterval3" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="interval" groups="MovingBall" scope="global" logging="when_changed" default_value="800" type="any" persistant="0"></variable>
            <variable tag="interval_min" groups="MovingBall" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="interval_max" groups="MovingBall" scope="global" logging="when_changed" default_value="1000" type="any" persistant="1"></variable>
            <variable tag="interval2" groups="MovingBall" scope="global" logging="when_changed" default_value="800" type="any" persistant="0"></variable>
            <variable tag="interval2_min" groups="MovingBall" scope="global" logging="when_changed" default_value="480" type="any" persistant="1"></variable>
            <variable tag="interval2_max" groups="MovingBall" scope="global" logging="when_changed" default_value="800" type="any" persistant="1"></variable>
            <variable tag="interval3" groups="MovingBall" scope="global" logging="when_changed" default_value="1000" type="any" persistant="0"></variable>
            <variable tag="interval_N" groups="MovingBall" scope="global" logging="when_changed" default_value="5" type="any" persistant="1"></variable>
            <variable tag="interval2_N" groups="MovingBall" scope="global" logging="when_changed" default_value="5" type="any" persistant="1"></variable>
            <variable tag="intervalList" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="list" persistant="0"></variable>
            <variable tag="intervalList2" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="list" persistant="0"></variable>
            <variable tag="nIntervalList2" groups="MovingBall" scope="global" logging="when_changed" default_value="6000" type="float" persistant="0"></variable>
            <variable tag="intervalListGaussPrior" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="list" persistant="0"></variable>
            <variable tag="nIntervalListGaussPrior" groups="MovingBall" scope="global" logging="when_changed" default_value="10000" type="integer" persistant="0"></variable>
            <variable tag="intervalListGaussPrior2" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="list" persistant="0"></variable>
            <variable tag="nIntervalListGaussPrior2" groups="MovingBall" scope="global" logging="when_changed" default_value="10000" type="integer" persistant="0"></variable>
            <variable tag="ratio" groups="MovingBall" scope="global" logging="when_changed" default_value="0.63029" type="float" persistant="0"></variable>
            <variable tag="idShortLong" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
            <variable tag="idFeed" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
            <variable tag="iFeed" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
            <variable tag="offset" scope="global" logging="when_changed" default_value="-150" type="integer"></variable>
            <variable tag="iShortLong" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
            <variable tag="idReproSL" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
            <variable tag="Nsets" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
            <variable tag="StartTheta" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="intervalFrames" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="interval2Frames" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="interval3Frames" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="radius" groups="MovingBall" scope="global" logging="when_changed" default_value="7.5" type="any" persistant="1"></variable>
            <variable tag="ballArcLength" groups="MovingBall" scope="global" logging="when_changed" default_value="180" type="any" persistant="1"></variable>
            <variable tag="ballFeedback_red" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="ballRed" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="ballGreen" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="ballBlue" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="ballFeedback_green" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="ballFeedback_blue" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="win_fraction" groups="MovingBall" scope="global" logging="when_changed" default_value="0.12" type="any" persistant="1"></variable>
            <variable tag="win_fraction0" groups="MovingBall" scope="global" logging="when_changed" default_value="0.12" type="any" persistant="1"></variable>
            <variable tag="win_fractionStep" groups="MovingBall" scope="global" logging="when_changed" default_value="0.01" type="any" persistant="1"></variable>
            <variable tag="dwin" scope="global" groups="MovingBall" logging="when_changed" default_value="0.01" type="any" persistant="1"></variable>
            <variable tag="acquisitionTime" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ballAlpha" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="flashAlpha" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
            <variable tag="flashRate" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="0"></variable>
            <variable tag="dflashRate" groups="MovingBall" scope="global" logging="when_changed" default_value="0.01" type="any" persistant="0"></variable>
            <variable tag="Interval1_ending" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="Interval2_ending" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="prodBallOn" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
            <variable tag="Interval2BallOn" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
            <variable tag="Interval1BallOn" groups="MovingBall" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
            <variable tag="ready_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ready_ending" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ready2_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="occluder_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set_ending" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set2_ending" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="go_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="go_ending" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set2_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set3_ended" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ready_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="go_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ready_cue_offset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="ready2_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set1_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set_cue_offset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set2_cue_offset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="set2_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="1e1000" type="any" persistant="0"></variable>
            <variable tag="set3_cue_onset_time_us" groups="MovingBall" scope="global" logging="when_changed" default_value="1e1000" type="any" persistant="0"></variable>
            <variable tag="saccade_wait_dur" groups="MovingBall" scope="global" logging="when_changed" default_value="4000" type="any" persistant="0"></variable>
            <variable tag="cue_duration_frames" groups="MovingBall" scope="global" logging="when_changed" default_value="3" type="any" persistant="1"></variable>
            <variable tag="cue_size_deg" groups="MovingBall" scope="global" logging="when_changed" default_value="0.25" type="any" persistant="1"></variable>
            <variable tag="FeedbackTimeDur" groups="MovingBall" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
            <variable tag="afterReady" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="0"></variable>
            <variable tag="afterReady2" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="0"></variable>
            <variable tag="afterSet1" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="0"></variable>
            <variable tag="afterSet2" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="0"></variable>
            <variable tag="afterSet3" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="0"></variable>
            <variable tag="fixOffMovingBall" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="1"></variable>
            <variable tag="relativeFixOffTime" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
            <variable tag="set2Off" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="setOff" groups="MovingBall" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
        </folder>
        <folder tag="Matlab">
            <variable tag="sync" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="Nback" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
        </folder>
        <folder tag="TMS">
            <variable tag="TMSout" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="TMSdur" groups="Matlab" scope="global" logging="when_changed" default_value="400" type="any" persistant="0"></variable>
            <variable tag="tsTMS" groups="Matlab" scope="global" logging="when_changed" default_value="150" type="any" persistant="0"></variable>
            <variable tag="tsTMSmax" groups="Matlab" scope="global" logging="when_changed" default_value="400" type="any" persistant="0"></variable>
            <variable tag="tpTMS" groups="Matlab" scope="global" logging="when_changed" default_value="50" type="any" persistant="0"></variable>
            <variable tag="tpTMSmax" groups="Matlab" scope="global" logging="when_changed" default_value="200" type="any" persistant="0"></variable>
            <variable tag="fixTMSoffset" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="tsTMSoffset" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="tsTMSoffset2" groups="Matlab" scope="global" logging="when_changed" default_value="300" type="any" persistant="0"></variable>
            <variable tag="tsTMSoffset3" groups="Matlab" scope="global" logging="when_changed" default_value="400" type="any" persistant="0"></variable>
            <variable tag="tsTMSoffset4" groups="Matlab" scope="global" logging="when_changed" default_value="300" type="any" persistant="0"></variable>
            <variable tag="tsTMSoffset5" groups="Matlab" scope="global" logging="when_changed" default_value="200" type="any" persistant="0"></variable>
            <variable tag="tpTMSoffset" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="tpTMSoffset2" groups="Matlab" scope="global" logging="when_changed" default_value="300" type="any" persistant="0"></variable>
            <variable tag="TMSpulseDur" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="0"></variable>
            <variable tag="TMSonset" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="TMS_wait_dur" groups="Matlab" scope="global" logging="when_changed" default_value="250" type="any" persistant="0"></variable>
            <variable tag="idTMS" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="idLocTMS" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="TMS_dur_min" groups="Fixation" scope="global" logging="when_changed" default_value="750" type="any" persistant="1"></variable>
            <variable tag="TMS_dur_mean" groups="Fixation" scope="global" logging="when_changed" default_value="500" type="any" persistant="1"></variable>
        </folder>
        <folder tag="Distractor 2">
            <variable tag="idMeasDelayProd" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
            <variable tag="sumMin" groups="Matlab" scope="global" logging="when_changed" default_value="2" type="any" persistant="0"></variable>
            <variable tag="sumMax" groups="Matlab" scope="global" logging="when_changed" default_value="5" type="any" persistant="0"></variable>
            <variable tag="sum" groups="Matlab" scope="global" logging="when_changed" default_value="2" type="any" persistant="0"></variable>
            <variable tag="sumShown" groups="Matlab" scope="global" logging="when_changed" default_value="2" type="any" persistant="0"></variable>
            <variable tag="sumShown_x" groups="Matlab" scope="global" logging="when_changed" default_value="3" type="any" persistant="0"></variable>
            <variable tag="sumShown_y" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="augend" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="augend_x" groups="Matlab" scope="global" logging="when_changed" default_value="-4" type="any" persistant="0"></variable>
            <variable tag="augend_y" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="addend" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="addend_x" groups="Matlab" scope="global" logging="when_changed" default_value="-1" type="any" persistant="0"></variable>
            <variable tag="addend_y" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="0"></variable>
            <variable tag="idIncorrect" groups="Matlab" scope="global" logging="when_changed" default_value="1" type="integer" persistant="1"></variable>
            <variable tag="idCorrectResp" groups="Matlab" scope="global" logging="when_changed" default_value="1" type="integer" persistant="1"></variable>
            <variable tag="dIncorrect" groups="Matlab" scope="global" logging="when_changed" default_value="1" type="integer" persistant="1"></variable>
            <variable tag="distract_FP_mean" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
            <variable tag="distract_FP_min" groups="Matlab" scope="global" logging="when_changed" default_value="200" type="any" persistant="1"></variable>
            <variable tag="distract_FP_max" groups="Matlab" scope="global" logging="when_changed" default_value="400" type="any" persistant="1"></variable>
            <variable tag="distract_dur" groups="Matlab" scope="global" logging="when_changed" default_value="400" type="any" persistant="1"></variable>
            <variable tag="distract_FP" groups="Matlab" scope="global" logging="when_changed" default_value="200" type="any" persistant="1"></variable>
            <variable tag="distract_size" groups="Matlab" scope="global" logging="when_changed" default_value="1" type="any" persistant="1"></variable>
        </folder>
        <folder tag="NewAdapt">
            <variable tag="mean_interval" groups="Matlab" scope="global" logging="when_changed" default_value="840" type="any" persistant="1"></variable>
            <variable tag="diff_interval" groups="Matlab" scope="global" logging="when_changed" default_value="90" type="any" persistant="1"></variable>
            <variable tag="nb_interval" groups="Matlab" scope="global" logging="when_changed" default_value="9" type="any" persistant="1"></variable>
            <variable tag="trial_trans" groups="Matlab" scope="global" logging="when_changed" default_value="450" type="any" persistant="1"></variable>
            <variable tag="min_trial_trans" groups="Matlab" scope="global" logging="when_changed" default_value="480" type="any" persistant="1"></variable>
            <variable tag="mean_trial_trans" groups="Matlab" scope="global" logging="when_changed" default_value="550" type="any" persistant="1"></variable>
            <variable tag="max_trial_trans" groups="Matlab" scope="global" logging="when_changed" default_value="700" type="any" persistant="1"></variable>
            <variable tag="max_trial" groups="Matlab" scope="global" logging="when_changed" default_value="1100" type="any" persistant="1"></variable>
            <variable tag="trial_break" groups="Matlab" scope="global" logging="when_changed" default_value="100" type="any" persistant="1"></variable>
            <variable tag="rand_seed" groups="Matlab" scope="global" logging="when_changed" default_value="0" type="any" persistant="1"></variable>
        </folder>
    </variables>
    <sounds tag="Sounds"></sounds>
    <stimuli tag="Stimuli">
        <folder tag="Gobal 2">
            <stimulus type="white_noise_background" tag="White Noise Background"></stimulus>
            <stimulus type="blank_screen" tag="New Blank Screen" color=".5,.5,.5"></stimulus>
            <stimulus type="circular_fixation_point" tag="Fix" color="fix_red,fix_green,fix_blue" trigger_width="fix_win" trigger_watch_x="eye_x" trigger_watch_y="eye_y" trigger_flag="fixOn" x_size="fix_sz" y_size="fix_sz" x_position="fixX" y_position="fixY" rotation="0" alpha_multiplier="1"></stimulus>
            <stimulus type="circular_fixation_point" tag="Fix2" color="0,0,0" trigger_width="fix_win" trigger_watch_x="eye_x" trigger_watch_y="eye_y" trigger_flag="fixOn" x_size="fix_sz/5*7" y_size="fix_sz/5*7" x_position="fixX" y_position="fixY" rotation="0" alpha_multiplier="1"></stimulus>
            <stimulus type="rectangle" tag="target" color="targ_red,targ_green,targ_blue" x_size="targ_sz" y_size="targ_sz" x_position="target_x" y_position="target_y" rotation="" alpha_multiplier="target_alpha"></stimulus>
            <stimulus type="circular_fixation_point" tag="target_backup" color="targ_red,targ_green,targ_blue" trigger_width="fix_win" trigger_watch_x="eye_x" trigger_watch_y="eye_y" trigger_flag="on_targ" x_size="targ_sz" y_size="targ_sz" x_position="target_x" y_position="target_y" rotation="0" alpha_multiplier="target_alpha"></stimulus>
            <stimulus type="circular_fixation_point" tag="target2" color="targ_red,targ_green,targ_blue" trigger_width="fix_win" trigger_watch_x="eye_x" trigger_watch_y="eye_y" trigger_flag="on_targ" x_size="targ_sz" y_size="targ_sz" x_position="target_x2" y_position="target_y2" rotation="0" alpha_multiplier="target_alpha"></stimulus>
        </folder>
        <folder tag="Fixation+Pursuit 2">
            <stimulus type="frame_list" tag="dynamicFix" stimulus_group="dynamicFixFrames" ending="" ended="" loop="YES" repeats="0" autoplay="YES"></stimulus>
            <stimulus_group tag="dynamicFixFrames">
                <stimulus type="circular_fixation_point" tag="fixCircleDyn" color="fix_red,fix_green,fix_blue" trigger_width="fix_win" trigger_watch_x="eye_x" trigger_watch_y="eye_y" trigger_flag="on_fix_dyn" x_size="fix_sz" y_size="fix_sz" x_position="fixX+cos(pursuitTheta*pi()/180)*fixDynMag*sin(2*pi()*fixHz*(nextFrameTime() - tStart)/1e6)" y_position="fixY+sin(pursuitTheta*pi()/180)*fixDynMag*sin(2*pi()*fixHz*(nextFrameTime() - tStart)/1e6)" rotation="0" alpha_multiplier="1"></stimulus>
            </stimulus_group>
        </folder>
        <folder tag="Fixation+Distractor 2">
            <stimulus type="circle" tag="Distractor" color="1,1,1" x_size="distractorSize" y_size="distractorSize" x_position="distractor_x" y_position="distractor_y" rotation="0" alpha_multiplier="distractor_alpha"></stimulus>
        </folder>
        <folder tag="MovingBall 2">
            <stimulus type="circle" tag="ballFeedback" color="ballFeedback_red,ballFeedback_green,ballFeedback_blue" x_size="ball_sz" y_size="ball_sz" x_position="amp*cos((pi()/180)*(StartTheta+(ballArcLength/3)*productionInterval/interval+(ballArcLength*2/3)))" y_position="amp*sin((pi()/180)*(StartTheta+(ballArcLength/3)*productionInterval/interval+(ballArcLength*2/3)))" rotation="1" alpha_multiplier="1"></stimulus>
            <stimulus type="circle" tag="ballFeedbackSE" color="ballFeedback_red,ballFeedback_green,ballFeedback_blue" x_size="ball_sz" y_size="ball_sz" x_position="amp*cos((pi()/180)*(theta+2*((productionInterval&gt;(interval-iFeed*offset))-0.5)*((productionInterval-interval+iFeed*offset)*(productionInterval-interval+iFeed*offset))/(interval*interval)*180*4))" y_position="amp*sin((pi()/180)*(theta+2*((productionInterval&gt;(interval-iFeed*offset))-0.5)*((productionInterval-interval+iFeed*offset)*(productionInterval-interval+iFeed*offset))/(interval*interval)*180*4))" rotation="1" alpha_multiplier="1"></stimulus>
            <stimulus type="frame_list" tag="ballFeedback2" stimulus_group="ballFeedback_frames2" ending="" ended="" loop="NO" repeats="round(refreshRate()*FeedbackTimeDur/1000)" autoplay="YES"></stimulus>
            <stimulus_group tag="ballFeedback_frames2">
                <stimulus type="circle" tag="ballFeedback_frame" color="ballFeedback_red,ballFeedback_green,ballFeedback_blue" x_size="ball_sz" y_size="ball_sz" x_position="radius*cos((pi()/180)*(StartTheta+(ballArcLength/2)*productionInterval/interval+(ballArcLength/2)))" y_position="radius*sin((pi()/180)*(StartTheta+(ballArcLength/2)*productionInterval/interval+(ballArcLength/2)))" rotation="1" alpha_multiplier="1"></stimulus>
            </stimulus_group>
            <stimulus type="circle" tag="go_frame 2" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength))" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            <stimulus type="rectangle" tag="refLineFeedback" color="1,1,1" x_size="10*ball_sz" y_size="ball_sz/4" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength))" rotation="" alpha_multiplier=""></stimulus>
            <stimulus type="circle" tag="ballFlash" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength*idReproSL/2))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength*idReproSL/2))" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            <stimulus type="frame_list" tag="ready_cue" stimulus_group="ready_frames" ending="ready_ending" ended="ready_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="ready_frames">
                <stimulus type="circle" tag="ready_frame" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta))" y_position="radius*sin(pi()/180*(StartTheta))+fixY" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="occluder_cue" stimulus_group="occluder_frames" ending="" ended="occluder_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="occluder_frames">
                <stimulus type="circle" tag="occluder_frame" color="0,0,0" x_size="cue_size_deg*4/5" y_size="cue_size_deg*4/5" x_position="radius*cos(pi()/180*(StartTheta))" y_position="radius*sin(pi()/180*(StartTheta))+fixY" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="set_cue" stimulus_group="set_frames" ending="set_ending" ended="set_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="set_frames">
                <stimulus type="circle" tag="set_frame" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength*1/(2)))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength*1/(2)))" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="set2_cue" stimulus_group="set2_frames" ending="set2_ending" ended="set2_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="set2_frames">
                <stimulus type="circle" tag="set2_frame" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength/2))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength/2))+fixY" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="set3_cue" stimulus_group="set3_frames" ending="" ended="set3_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="set3_frames">
                <stimulus type="circle" tag="set3_frame" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength))" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="ready2_cue" stimulus_group="ready2_frames" ending="" ended="ready2_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="ready2_frames">
                <stimulus type="circle" tag="ready2_frame" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta))" y_position="radius*sin(pi()/180*(StartTheta))" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="go_cue" stimulus_group="go_frames" ending="go_ending" ended="go_ended" loop="NO" repeats="cue_duration_frames" autoplay="YES"></stimulus>
            <stimulus_group tag="go_frames">
                <stimulus type="circle" tag="go_frame" color="1,1,1" x_size="cue_size_deg" y_size="cue_size_deg" x_position="radius*cos(pi()/180*(StartTheta+ballArcLength))" y_position="radius*sin(pi()/180*(StartTheta+ballArcLength))" rotation="0" alpha_multiplier="flashAlpha"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="Interval1" stimulus_group="Interval1_frames" ending="Interval1_ending" ended="" loop="NO" repeats="intervalFrames" autoplay="YES"></stimulus>
            <stimulus_group tag="Interval1_frames">
                <stimulus type="circle" tag="Interval1Stim" color="0,0,0" x_size="0" y_size="0" x_position="100" y_position="100" rotation="0" alpha_multiplier="0"></stimulus>
            </stimulus_group>
            <stimulus type="frame_list" tag="Interval2" stimulus_group="Interval2_frames" ending="Interval2_ending" ended="" loop="NO" repeats="intervalFrames" autoplay="YES"></stimulus>
            <stimulus_group tag="Interval2_frames">
                <stimulus type="circle" tag="Interval2Stim" color="0,0,0" x_size="0" y_size="0" x_position="100" y_position="100" rotation="0" alpha_multiplier="1"></stimulus>
            </stimulus_group>
        </folder>
        <folder tag="Maze 2">
            <stimulus type="frame_list" tag="ball" stimulus_group="ball_frames" ended="" ending="stimEnding" repeats="ballFrames" loop="NO" autoplay="YES"></stimulus>
            <stimulus_group tag="ball_frames">
                <stimulus type="circle" tag="ballDynamic" color="ballRed,ballGreen,ballBlue" x_size="ball_sz" y_size="ball_sz" x_position="speedTrial*(ballDur)+xTurn0Trial-speedTrial*((nextFrameTime() - tStart)/1e3)" y_position="yTurn0Trial" rotation="1" alpha_multiplier="ballAlpha"></stimulus>
            </stimulus_group>
            <stimulus_group tag="maze">
                <list_replicator tag="New List Replicator" values="filenames(image/*.png)" variable="filename">
                    <stimulus type="image_file" tag="${filename}" path="${filename}" x_size="imW[iTrial]/deg2pix" y_size="imH[iTrial]/deg2pix" x_position="0" y_position="0" rotation="0.0" alpha_multiplier="1.0" deferred="0"></stimulus>
                </list_replicator>
            </stimulus_group>
        </folder>
    </stimuli>
    <filters tag="Filters"></filters>
    <optimizers tag="Optimizers"></optimizers>
    <experiment tag="Ready Set Go" full_name="" description="">
        <protocol tag="RSGmaze" nsamples="1" sampling_method="cycles" selection="sequential" interruptible="YES">
            <action tag="Start Eyelink 2" type="start_device_IO" device="Eyelink 1000"></action>
            <action tag="Start keyboard 3" type="start_device_IO" device="USB HID Device"></action>
            <action tag="Start mouse" type="start_device_IO" device="Mouse Input Device"></action>
            <action type="run_python_file" tag="Load script" path="loadParams.py"></action>
            <action type="run_python_file" tag="Load script 2" path="saveParams.py"></action>
            <action tag="Queue Stimulus 4" type="queue_stimulus" stimulus="New Blank Screen"></action>
            <action tag="Update Stimulus Display 5" type="update_stimulus_display"></action>
            <block tag="block" nsamples="1" sampling_method="cycles" selection="sequential" interruptible="YES">
                <task_system tag="Trials" interruptible="YES">
                    <task_system_state tag="Initial" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Assign iTrial" variable="iTrial" value="0"></action>
                        <action type="run_python_string" tag="Run Python String - loadParams" code="loadParams()" stop_on_failure="YES"></action>
                        <action type="assignment" tag="initialize win_fraction" variable="win_fraction" value="win_fraction0"></action>
                        <action type="assignment" tag="initialize tp" variable="tp" value="nTurn"></action>
                        <action type="assignment" tag="Assign iT" variable="iT" value="0"></action>
                        <action type="while" tag="while iT&lt;trialNum" condition="iT&lt;trialNum">
                            <action type="assignment" tag="Assign tp" variable="tp[iT]" value="0"></action>
                            <action type="assignment" tag="Assign iT" variable="iT" value="iT+1"></action>
                        </action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="if buttonPressed spacebar, feed start" condition="buttonPressed" target="Fix On"></transition>
                    </task_system_state>
                    <task_system_state tag="Fix On" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Assign nTurnTrial" variable="nTurnTrial" value="nTurn[iTrial]"></action>
                        <action type="assignment" tag="Assign distTrial in deg" variable="distTrial" value="dist[iTrial]/deg2pix"></action>
                        <action type="assignment" tag="Assign speedTrial in deg per ms" variable="speedTrial" value="speed[iTrial]/deg2pix"></action>
                        <action type="assignment" tag="Assign tsTrial in msec" variable="tsTrial" value="ts[iTrial]"></action>
                        <action type="assignment" tag="Assign yTurn0Trial in deg cooridnate" variable="yTurn0Trial" value="-(yTurn0[iTrial])/deg2pix"></action>
                        <action type="assignment" tag="Assign yTurn1Trial in deg cooridnate" variable="yTurn1Trial" value="-(yTurn1[iTrial])/deg2pix"></action>
                        <action type="assignment" tag="Assign xTurn0Trial in deg cooridnate 2" variable="xTurn0Trial" value="(xTurn0[iTrial])/deg2pix"></action>
                        <action type="assignment" tag="Assign xTurn1Trial in deg cooridnate 2" variable="xTurn1Trial" value="(xTurn1[iTrial])/deg2pix"></action>
                        <action type="assignment" tag="Assign xSizePix" variable="xSizePix" value="imW[iTrial]"></action>
                        <action type="assignment" tag="Assign ySizePix" variable="ySizePix" value="imH[iTrial]"></action>
                        <action type="assignment" tag="Assign xSize" variable="xSize" value="xSizePix/deg2pix"></action>
                        <action type="assignment" tag="Assign ySize" variable="ySize" value="ySizePix/deg2pix"></action>
                        <action type="assignment" tag="Assign ballFeedback_red" variable="ballFeedback_red" value="1"></action>
                        <action type="assignment" tag="Assign ballFeedback_blue" variable="ballFeedback_blue" value="1"></action>
                        <action type="assignment" tag="Assign ballFeedback_green 3" variable="ballFeedback_green" value="1"></action>
                        <action type="assignment" tag="Assign afterReady 2" variable="afterReady" value="0"></action>
                        <action type="assignment" tag="Assign afterSet4" variable="afterSet2" value="0"></action>
                        <action tag="Live Queue Fix" type="live_queue_stimulus" stimulus="Fix"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="start_timer" tag="Start fixWait" timer="fixWait" timebase="" duration="fixWaitDur" duration_units="ms"></action>
                        <action type="report" tag="Report fix on" message="Fixation on."></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="When fixOn, go to Trial Start" condition="1==1" target="Trial Start"></transition>
                        <transition type="timer_expired" tag="If fix_wait Expired, Transition to No Fix" target="No Fix" timer="fixWait"></transition>
                    </task_system_state>
                    <task_system_state tag="Trial Start" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Assign startTrial" variable="startTrial" value="1"></action>
                        <action type="assignment" tag="Assign sync" variable="sync" value="1"></action>
                        <action type="assignment" tag="Select interval in ms" variable="interval" value="tsTrial"></action>
                        <action type="report" tag="Report interval" message="$interval"></action>
                        <action type="assignment" tag="Assign ballFrames" variable="ballFrames" value="round(refresh_rate()*ballDur/1000)"></action>
                        <action type="assignment" tag="Assign saccade_wait_dur 2" variable="saccade_wait_dur" value="nTimeTs*interval"></action>
                        <action type="assignment" tag="Set target_x" variable="target_x" value="xTurn1Trial"></action>
                        <action type="assignment" tag="Set target_y" variable="target_y" value="yTurn1Trial"></action>
                        <action type="assignment" tag="Assign StartTheta" variable="StartTheta" value="theta-ballArcLength"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to Maze on" target="Maze On"></transition>
                    </task_system_state>
                    <task_system_state tag="Maze On" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="report" tag="Report iTrial 2" message="$iTrial"></action>
                        <action tag="Dequeue Fix" type="dequeue_stimulus" stimulus="Fix"></action>
                        <action tag="Queue maze" type="queue_stimulus" stimulus="maze[iTrial]"></action>
                        <action tag="Live Queue target" type="live_queue_stimulus" stimulus="target"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="assignment" tag="(BackUp) Deterimine time to until fix off" variable="targetTimeDur" value="-target_dur_mean*logn(rand(0,1)) + target_dur_min"></action>
                        <action type="start_timer" tag="Start mazeTime" timer="mazeTime" timebase="" duration="mazeTimeDur" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="If mazeTime Expired, Transition to Ready" target="Ready" timer="mazeTime"></transition>
                    </task_system_state>
                    <task_system_state tag="Ready" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Assign tStart" variable="tStart" value="now()"></action>
                        <action type="assignment" tag="Reset ready_ended" variable="ready_ended" value="0"></action>
                        <action tag="Live Queue ball 2" type="live_queue_stimulus" stimulus="ball"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="assignment" tag="Store ready cue onset time" variable="ready_cue_onset_time_us" value="now()"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="When stimEnding, go to Set 2" condition="stimEnding" target="Set 2"></transition>
                    </task_system_state>
                    <task_system_state tag="Set 2" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action tag="Dequeue ball cue" type="dequeue_stimulus" stimulus="ball"></action>
                        <action type="assignment" tag="Reset set2_ended" variable="set2_ended" value="0"></action>
                        <action type="assignment" tag="Reset stimEnding" variable="stimEnding" value="0"></action>
                        <action type="if" tag="If idFreeView==0" condition="idFreeView==0">
                            <action type="assignment" tag="Assign fixY yTurn0Trial" variable="fixY" value="yTurn0Trial"></action>
                            <action type="assignment" tag="Assign fixX xTurn0Trial" variable="fixX" value="xTurn0Trial"></action>
                            <action tag="Live Queue Fix 2" type="live_queue_stimulus" stimulus="Fix"></action>
                        </action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="assignment" tag="Store set2 cue onset time" variable="set2_cue_onset_time_us" value="now()"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to Production Interval" target="Production Interval"></transition>
                    </task_system_state>
                    <task_system_state tag="Production Interval" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Store set2Off" variable="set2Off" value="1"></action>
                        <action type="assignment" tag="Assign afterSet2" variable="afterSet2" value="1"></action>
                        <action type="start_timer" tag="Start saccade_wait" timer="saccade_wait" timebase="" duration="saccade_wait_dur" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="If buttonPressed Transition to Production 3" condition="buttonPressed" target="Production"></transition>
                        <transition type="timer_expired" tag="If saccade_wait Expired, Transition to Production" target="Production" timer="saccade_wait"></transition>
                    </task_system_state>
                    <task_system_state tag="Production" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Assign productionInterval 2" variable="productionInterval" value="(now()-set2_cue_onset_time_us)/1000"></action>
                        <action type="assignment" tag="Assign tp" variable="tp[iTrial]" value="productionInterval"></action>
                        <action type="report" tag="Report productionInterval" message="$productionInterval"></action>
                        <action type="assignment" tag="Assign acquisitionTime 2" variable="acquisitionTime" value="now()"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="If correct, Transition to Reward" condition="abs(productionInterval - interval)/interval &lt;= win_fraction" target="Reward"></transition>
                        <transition type="direct" tag="Always Go to Early or Late" target="Early or Late"></transition>
                    </task_system_state>
                    <task_system_state tag="Production 2" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Assign productionInterval 2" variable="productionInterval" value="(now()-set2_cue_onset_time_us)/1000"></action>
                        <action type="assignment" tag="Assign tp" variable="tp[iTrial]" value="productionInterval"></action>
                        <action type="report" tag="Report productionInterval" message="$productionInterval"></action>
                        <action type="assignment" tag="Assign acquisitionTime 2" variable="acquisitionTime" value="now()"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="If correct, Transition to Reward" condition="abs(productionInterval - interval)/interval &lt;= win_fraction" target="Reward"></transition>
                        <transition type="direct" tag="Always Go to Early or Late" target="Early or Late"></transition>
                    </task_system_state>
                    <task_system_state tag="Reward" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="report" tag="Report success" message="Success!"></action>
                        <action type="assignment" tag="Set targ_red to 0" variable="targ_red" value="0"></action>
                        <action type="assignment" tag="Set targ_blue to 0" variable="targ_blue" value="0"></action>
                        <action type="assignment" tag="Set ballFeedback_red to 0" variable="ballFeedback_red" value="0"></action>
                        <action type="assignment" tag="Set ballFeedback_blue to 0" variable="ballFeedback_blue" value="0"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="assignment" tag="update win_fraction" variable="win_fraction" value="max(win_fraction-win_fractionStep,0)"></action>
                        <action type="assignment" tag="Increment MovingBall_correct 2" variable="MovingBall_correct" value="MovingBall_correct+1"></action>
                        <action type="assignment" tag="Assign thetaFeedback 9" variable="thetaFeedback" value="2*((productionInterval&gt;(interval-iFeed*offset))-0.5)*((productionInterval-interval+iFeed*offset)*(productionInterval-interval+iFeed*offset))/(interval*interval)*180*4"></action>
                        <action type="start_timer" tag="Start GreenTime" timer="GreenTime" timebase="" duration="rewardDur" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="If GreenTime Expired, Transition to End Trial" target="End Trial" timer="GreenTime"></transition>
                    </task_system_state>
                    <task_system_state tag="End Trial" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="run_python_string" tag="Run Python String - saveParams 2" code="saveParams()" stop_on_failure="YES"></action>
                        <action tag="Dequeue target" type="dequeue_stimulus" stimulus="target"></action>
                        <action tag="Dequeue target 2" type="dequeue_stimulus" stimulus="ball"></action>
                        <action type="assignment" tag="Set targ_green to 1" variable="targ_green" value="1"></action>
                        <action type="assignment" tag="Set targ_red to 1" variable="targ_red" value="1"></action>
                        <action type="assignment" tag="Set targ_blue to 1" variable="targ_blue" value="1"></action>
                        <action tag="Dequeue maze" type="dequeue_stimulus" stimulus="maze[iTrial]"></action>
                        <action tag="Dequeue ballFeedback" type="dequeue_stimulus" stimulus="ballFeedback"></action>
                        <action type="if" tag="If idFreeView==0" condition="idFreeView==0">
                            <action tag="Dequeue Fix" type="dequeue_stimulus" stimulus="Fix"></action>
                        </action>
                        <action type="assignment" tag="Assign fixY yTurn0Trial 2" variable="fixY" value="yTurn0Trial"></action>
                        <action type="assignment" tag="Assign fixX xTurn0Trial 2" variable="fixX" value="xTurn0Trial"></action>
                        <action tag="Live Queue Fix 3" type="live_queue_stimulus" stimulus="Fix"></action>
                        <action type="assignment" tag="Increment iTrial" variable="iTrial" value="iTrial+1"></action>
                        <action type="assignment" tag="Increment localTrials" variable="localTrials" value="localTrials+1"></action>
                        <action type="assignment" tag="Reset Interval1_ending" variable="Interval1_ending" value="0"></action>
                        <action type="assignment" tag="Reset Interval2_ending" variable="Interval2_ending" value="0"></action>
                        <action type="assignment" tag="Reset ready_ended" variable="ready_ended" value="0"></action>
                        <action type="assignment" tag="Reset set2_ended" variable="set_ended" value="0"></action>
                        <action type="assignment" tag="Store set2Off" variable="set2Off" value="0"></action>
                        <action type="assignment" tag="Assign sync" variable="sync" value="0"></action>
                        <action type="assignment" tag="Assign endTrial" variable="endTrial" value="1"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="If (iTrial%(trialNumBlock))==0 &amp;&amp; iTrial&gt;0, Transition to Break" condition="(iTrial%(trialNumBlock))==0 &amp;&amp; iTrial&gt;0" target="Break"></transition>
                        <transition type="conditional" tag="If iTrial==trialNum &amp;&amp; iTrial&gt;0, Transition to Exit State System" condition="iTrial==trialNum &amp;&amp; iTrial&gt;0" target="Exit State System"></transition>
                        <transition type="direct" tag="Always Go to ITI" target="ITI"></transition>
                    </task_system_state>
                    <task_system_state tag="ITI" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="start_timer" tag="Start ITI" timer="ITI" timebase="" duration="iti" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="If ITI Expired, Transition to Fix On" target="Fix On" timer="ITI"></transition>
                    </task_system_state>
                    <task_system_state tag="Early or Late" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="if" tag="If early, yellow" condition="(productionInterval - interval)/interval &lt; -(win_fraction)">
                            <action type="assignment" tag="Set targ_blue to 0" variable="targ_blue" value="0"></action>
                        </action>
                        <action type="if" tag="If late, red" condition="(productionInterval - interval)/interval &gt; win_fraction">
                            <action type="assignment" tag="Set targ_green to 2" variable="targ_green" value="0"></action>
                            <action type="assignment" tag="Set targ_blue to 3" variable="targ_blue" value="0"></action>
                        </action>
                        <action type="assignment" tag="Set ballFeedback_green to 0" variable="ballFeedback_green" value="0"></action>
                        <action type="assignment" tag="Set ballFeedback_blue to 0" variable="ballFeedback_blue" value="0"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="assignment" tag="Assign win_fraction 4" variable="win_fraction" value="win_fraction+win_fractionStep"></action>
                        <action type="assignment" tag="Assign thetaFeedback 10" variable="thetaFeedback" value="2*((productionInterval&gt;(interval-iFeed*offset))-0.5)*((productionInterval-interval+iFeed*offset)*(productionInterval-interval+iFeed*offset))/(interval*interval)*180*4"></action>
                        <action type="start_timer" tag="Start FeedbackTime" timer="FeedbackTime" timebase="" duration="FeedbackTimeDur" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="If FeedbackTime Expired, Transition to Bad" target="Bad" timer="FeedbackTime"></transition>
                    </task_system_state>
                    <task_system_state tag="Abort" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="report" tag="Report trial aborted" message="Trial aborted!"></action>
                        <action type="assignment" tag="Compute Production Time" variable="productionInterval" value="-2*interval"></action>
                        <action type="assignment" tag="Assign acquisitionTime" variable="acquisitionTime" value="now()"></action>
                        <action tag="Dequeue ready cue" type="dequeue_stimulus" stimulus="ready_cue"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to Bad" target="Bad"></transition>
                    </task_system_state>
                    <task_system_state tag="After Ready" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Compute Production Time" variable="productionInterval" value="(now() - ready_cue_onset_time_us -interval*2000) / 1000.0"></action>
                        <action type="assignment" tag="Assign acquisitionTime" variable="acquisitionTime" value="now()"></action>
                        <action type="assignment" tag="Assign afterReady" variable="afterReady" value="1"></action>
                        <action tag="Dequeue ball" type="dequeue_stimulus" stimulus="ball"></action>
                        <action tag="Dequeue ready cue" type="dequeue_stimulus" stimulus="ready_cue"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to Bad" target="Bad"></transition>
                    </task_system_state>
                    <task_system_state tag="After Set1" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Compute Production Time" variable="productionInterval" value="(now() - set1_cue_onset_time_us -interval*1000) / 1000.0"></action>
                        <action type="assignment" tag="Assign acquisitionTime" variable="acquisitionTime" value="now()"></action>
                        <action type="assignment" tag="Assign afterSet1" variable="afterSet1" value="1"></action>
                        <action tag="Dequeue ball" type="dequeue_stimulus" stimulus="ball"></action>
                        <action tag="Dequeue set cue" type="dequeue_stimulus" stimulus="set_cue"></action>
                        <action tag="Dequeue set2 cue 3" type="dequeue_stimulus" stimulus="set2_cue"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to Bad" target="Bad"></transition>
                    </task_system_state>
                    <task_system_state tag="No Saccade" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="assignment" tag="Compute Production Time" variable="productionInterval" value="(now() - set2_cue_onset_time_us) / 1000.0"></action>
                        <action type="assignment" tag="Assign acquisitionTime" variable="acquisitionTime" value="now()"></action>
                        <action tag="Dequeue ball" type="dequeue_stimulus" stimulus="ball"></action>
                        <action tag="Dequeue set2 cue" type="dequeue_stimulus" stimulus="set2_cue"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="report" tag="Report failure 3" message="no saccade."></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to Bad" target="Bad"></transition>
                    </task_system_state>
                    <task_system_state tag="Bad" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action tag="Dequeue Fix" type="dequeue_stimulus" stimulus="Fix"></action>
                        <action tag="Dequeue target" type="dequeue_stimulus" stimulus="target"></action>
                        <action tag="Dequeue ballFeedback" type="dequeue_stimulus" stimulus="ballFeedback"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="report" tag="Report failure" message="Failure."></action>
                        <action type="start_timer" tag="Start Timeout 3" timer="Timeout" timebase="" duration="timeout" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="If Timeout Expired, Transition to End Trial 3" target="End Trial" timer="Timeout"></transition>
                    </task_system_state>
                    <task_system_state tag="No Fix" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action tag="Dequeue Fix" type="dequeue_stimulus" stimulus="Fix"></action>
                        <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                        <action type="report" tag="Report no fixation" message="Failed to fixate."></action>
                        <action type="start_timer" tag="Start NoFixWait" timer="NoFixWait" timebase="" duration="NoFixWaitDur" duration_units="ms"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="If NoFixWait Expired, Transition to Fix On" target="Fix On" timer="NoFixWait"></transition>
                    </task_system_state>
                    <task_system_state tag="Break" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="report" tag="Report break" message="Break."></action>
                        <action type="assignment" tag="Assign idFreeView" variable="idFreeView" value="1-idFreeView"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="conditional" tag="if buttonPressed spacebar, feed FixOn" condition="buttonPressed" target="Fix On"></transition>
                    </task_system_state>
                    <task_system_state tag="Exit State System" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
                        <action type="report" tag="Announce Exit State System" message="Leaving state system"></action>
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition tag="Return to parent task system" type="yield"></transition>
                    </task_system_state>
                </task_system>
            </block>
        </protocol>
        <protocol tag="Fixation+Pursuit_H" nsamples="1" sampling_method="cycles" selection="sequential" interruptible="YES">
            <action tag="Start Eyelink" type="start_device_IO" device="Eyelink 1000"></action>
            <action type="assignment" tag="Assign bonusRewDur" variable="bonusRewDur" value="0"></action>
            <action type="assignment" tag="Assign consecutiveCorrect" variable="consecutiveCorrect" value="0"></action>
            <action tag="Queue Stimulus 2" type="queue_stimulus" stimulus="New Blank Screen"></action>
            <action tag="Update Stimulus Display 3" type="update_stimulus_display"></action>
            <task_system tag="Trials" interruptible="YES">
                <task_system_state tag="Initial" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Announce Begin State System" message="State system beginning"></action>
                    <action type="assignment" tag="Assign localTrials" variable="localTrials" value="0"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Go to Exit" type="direct" target="Trial Start"></transition>
                </task_system_state>
                <task_system_state tag="Fix On" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Assign fix_red" variable="fix_red" value="1"></action>
                    <action type="assignment" tag="Assign fix_blue" variable="fix_blue" value="1"></action>
                    <action type="assignment" tag="Assign tStart" variable="tStart" value="nextFrameTime()"></action>
                    <action tag="Live Queue dynamicFix" type="live_queue_stimulus" stimulus="dynamicFix"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="start_timer" tag="Start fixWait" timer="fixWait" timebase="" duration="fixWaitDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If on_fix_dyn, Transition to Trial Start" condition="on_fix_dyn" target="Trial Start"></transition>
                    <transition type="timer_expired" tag="If fixWait Expired, Transition to Failure to fixate" target="Failure to fixate" timer="fixWait"></transition>
                </task_system_state>
                <task_system_state tag="Trial Start" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report fixation acquired" message="Fixation acquired."></action>
                    <action type="assignment" tag="Assign startTrial" variable="startTrial" value="1"></action>
                    <action type="assignment" tag="Assign pursuitTheta" variable="pursuitTheta" value="0"></action>
                    <action type="start_timer" tag="Start HoldFix" timer="HoldFix" timebase="" duration="fix_pur_HoldDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If !on_fix_dyn, Transition to Bad" condition="!on_fix_dyn" target="Bad"></transition>
                    <transition type="timer_expired" tag="If HoldFix Expired, Transition to Reward" target="Reward" timer="HoldFix"></transition>
                </task_system_state>
                <task_system_state tag="Reward" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report success" message="Success!"></action>
                    <action type="assignment" tag="Assign fix_red" variable="fix_red" value="0"></action>
                    <action type="assignment" tag="Assign fix_blue" variable="fix_blue" value="0"></action>
                    <action type="assignment" tag="Increment consecutiveCorrect" variable="consecutiveCorrect" value="consecutiveCorrect + 1"></action>
                    <action type="assignment" tag="Assign bonusRewDur" variable="bonusRewDur" value="min(200, (consecutiveCorrect-1)*dbonus)"></action>
                    <action type="pulse" tag="Pulse rewardOut" variable="rewardOut" duration="(rewardDur+bonusRewDur)*1000"></action>
                    <action type="assignment" tag="Increment fix_pur_correct" variable="fix_pur_correct" value="fix_pur_correct+1"></action>
                    <action type="start_timer" tag="Start GreenTime" timer="GreenTime" timebase="" duration="rewardDur+bonusRewDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If GreenTime Expired, Transition to End Trial" target="End Trial" timer="GreenTime"></transition>
                </task_system_state>
                <task_system_state tag="End Trial" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report Ending Trial" message="Ending Trial."></action>
                    <action tag="Dequeue dynamicFix" type="dequeue_stimulus" stimulus="dynamicFix"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="assignment" tag="Increment fix_pur_trials" variable="fix_pur_trials" value="fix_pur_trials+1"></action>
                    <action type="assignment" tag="Increment localTrials" variable="localTrials" value="localTrials+1"></action>
                    <action type="assignment" tag="Assign endTrial" variable="endTrial" value="1"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If localTrials &gt;= trialNum, Transition to Exit Fixation Pursuit System" condition="localTrials &gt;= trialNum" target="Exit Fixation Pursuit System"></transition>
                    <transition type="conditional" tag="If pstop, Transition to Exit Fixation Pursuit System" condition="pstop" target="Exit Fixation Pursuit System"></transition>
                    <transition type="direct" tag="Always Go to ITI" target="ITI"></transition>
                </task_system_state>
                <task_system_state tag="ITI" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report ITI" message="ITI."></action>
                    <action type="start_timer" tag="Start fix_pur_ITI" timer="fix_pur_ITI" timebase="" duration="fix_pur_ITI_Dur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If fix_pur_ITI Expired, Transition to Fix On" target="Fix On" timer="fix_pur_ITI"></transition>
                </task_system_state>
                <task_system_state tag="Bad" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report failure" message="Trial Failed."></action>
                    <action tag="Dequeue dynamicFix" type="dequeue_stimulus" stimulus="dynamicFix"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="assignment" tag="Assign consecutiveCorrect" variable="consecutiveCorrect" value="0"></action>
                    <action type="start_timer" tag="Start fix_pur_timeout" timer="fix_pur_timeout" timebase="" duration="fix_pur_timeoutDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If fix_pur_timeout Expired, Transition to End Trial" target="End Trial" timer="fix_pur_timeout"></transition>
                </task_system_state>
                <task_system_state tag="Failure to fixate" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report Failure to fixate" message="Failure to fixate."></action>
                    <action tag="Dequeue dynamicFix" type="dequeue_stimulus" stimulus="dynamicFix"></action>
                    <action type="start_timer" tag="Start NoFixWait" timer="NoFixWait" timebase="" duration="NoFixWaitDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If NoFixWait Expired, Transition to Fix On" target="Fix On" timer="NoFixWait"></transition>
                </task_system_state>
                <task_system_state tag="Exit Fixation Pursuit System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Announce Exit State System" message="Leaving state system"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Return to parent task system" type="yield"></transition>
                </task_system_state>
            </task_system>
        </protocol>
        <protocol tag="Fixation+Pursuit_V" nsamples="1" sampling_method="cycles" selection="sequential" interruptible="YES">
            <action tag="Start Eyelink" type="start_device_IO" device="Eyelink 1000"></action>
            <action type="assignment" tag="Assign bonusRewDur" variable="bonusRewDur" value="0"></action>
            <action type="assignment" tag="Assign consecutiveCorrect" variable="consecutiveCorrect" value="0"></action>
            <action tag="Queue Stimulus 2" type="queue_stimulus" stimulus="New Blank Screen"></action>
            <action tag="Update Stimulus Display 3" type="update_stimulus_display"></action>
            <task_system tag="Trials" interruptible="YES">
                <task_system_state tag="Initial" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Announce Begin State System" message="State system beginning"></action>
                    <action type="assignment" tag="Assign localTrials" variable="localTrials" value="0"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Go to Exit" type="direct" target="Trial Start"></transition>
                </task_system_state>
                <task_system_state tag="Fix On" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Assign fix_red" variable="fix_red" value="1"></action>
                    <action type="assignment" tag="Assign fix_blue" variable="fix_blue" value="1"></action>
                    <action type="assignment" tag="Assign tStart" variable="tStart" value="nextFrameTime()"></action>
                    <action tag="Live Queue dynamicFix" type="live_queue_stimulus" stimulus="dynamicFix"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="start_timer" tag="Start fixWait" timer="fixWait" timebase="" duration="fixWaitDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If on_fix_dyn, Transition to Trial Start" condition="on_fix_dyn" target="Trial Start"></transition>
                    <transition type="timer_expired" tag="If fixWait Expired, Transition to Failure to fixate" target="Failure to fixate" timer="fixWait"></transition>
                </task_system_state>
                <task_system_state tag="Trial Start" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report fixation acquired" message="Fixation acquired."></action>
                    <action type="assignment" tag="Assign startTrial" variable="startTrial" value="1"></action>
                    <action type="assignment" tag="Assign pursuitTheta" variable="pursuitTheta" value="90"></action>
                    <action type="start_timer" tag="Start HoldFix" timer="HoldFix" timebase="" duration="fix_pur_HoldDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If !on_fix_dyn, Transition to Bad" condition="!on_fix_dyn" target="Bad"></transition>
                    <transition type="timer_expired" tag="If HoldFix Expired, Transition to Reward" target="Reward" timer="HoldFix"></transition>
                </task_system_state>
                <task_system_state tag="Reward" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report success" message="Success!"></action>
                    <action type="assignment" tag="Assign fix_red" variable="fix_red" value="0"></action>
                    <action type="assignment" tag="Assign fix_blue" variable="fix_blue" value="0"></action>
                    <action type="assignment" tag="Increment consecutiveCorrect" variable="consecutiveCorrect" value="consecutiveCorrect + 1"></action>
                    <action type="assignment" tag="Assign bonusRewDur" variable="bonusRewDur" value="min(200, (consecutiveCorrect-1)*dbonus)"></action>
                    <action type="pulse" tag="Pulse rewardOut" variable="rewardOut" duration="(rewardDur+bonusRewDur)*1000"></action>
                    <action type="assignment" tag="Increment fix_pur_correct" variable="fix_pur_correct" value="fix_pur_correct+1"></action>
                    <action type="start_timer" tag="Start GreenTime" timer="GreenTime" timebase="" duration="rewardDur+bonusRewDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If GreenTime Expired, Transition to End Trial" target="End Trial" timer="GreenTime"></transition>
                </task_system_state>
                <task_system_state tag="End Trial" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report Ending Trial" message="Ending Trial."></action>
                    <action tag="Dequeue dynamicFix" type="dequeue_stimulus" stimulus="dynamicFix"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="assignment" tag="Increment fix_pur_trials" variable="fix_pur_trials" value="fix_pur_trials+1"></action>
                    <action type="assignment" tag="Increment localTrials" variable="localTrials" value="localTrials+1"></action>
                    <action type="assignment" tag="Assign endTrial" variable="endTrial" value="1"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If localTrials &gt;= trialNum, Transition to Exit Fixation Pursuit System" condition="localTrials &gt;= trialNum" target="Exit Fixation Pursuit System"></transition>
                    <transition type="conditional" tag="If pstop, Transition to Exit Fixation Pursuit System" condition="pstop" target="Exit Fixation Pursuit System"></transition>
                    <transition type="direct" tag="Always Go to ITI" target="ITI"></transition>
                </task_system_state>
                <task_system_state tag="ITI" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report ITI" message="ITI."></action>
                    <action type="start_timer" tag="Start fix_pur_ITI" timer="fix_pur_ITI" timebase="" duration="fix_pur_ITI_Dur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If fix_pur_ITI Expired, Transition to Fix On" target="Fix On" timer="fix_pur_ITI"></transition>
                </task_system_state>
                <task_system_state tag="Bad" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report failure" message="Trial Failed."></action>
                    <action tag="Dequeue dynamicFix" type="dequeue_stimulus" stimulus="dynamicFix"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="assignment" tag="Assign consecutiveCorrect" variable="consecutiveCorrect" value="0"></action>
                    <action type="start_timer" tag="Start fix_pur_timeout" timer="fix_pur_timeout" timebase="" duration="fix_pur_timeoutDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If fix_pur_timeout Expired, Transition to End Trial" target="End Trial" timer="fix_pur_timeout"></transition>
                </task_system_state>
                <task_system_state tag="Failure to fixate" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Report Failure to fixate" message="Failure to fixate."></action>
                    <action tag="Dequeue dynamicFix" type="dequeue_stimulus" stimulus="dynamicFix"></action>
                    <action type="start_timer" tag="Start NoFixWait" timer="NoFixWait" timebase="" duration="NoFixWaitDur" duration_units="ms"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="timer_expired" tag="If NoFixWait Expired, Transition to Fix On" target="Fix On" timer="NoFixWait"></transition>
                </task_system_state>
                <task_system_state tag="Exit Fixation Pursuit System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="report" tag="Announce Exit State System" message="Leaving state system"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Return to parent task system" type="yield"></transition>
                </task_system_state>
            </task_system>
        </protocol>
    </experiment>
</monkeyml>